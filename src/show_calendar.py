import discord
from discord.ext import commands
import asyncio
import calendar
from datetime import datetime
from dotenv import load_dotenv
import os

load_dotenv()

TOKEN = os.getenv("TOKEN")

bot = commands.Bot(command_prefix="!", intents=discord.Intents.all())


@bot.event
async def on_ready():
    print(f"{bot.user.name} has connected to Discord!")


async def show_calendar(ctx):
    now = datetime.now()
    current_month = now.month
    current_year = now.year
    selected_date = now.day  # ÈÅ∏Êäû‰∏≠„ÅÆÊó•‰ªò„Åë

    # „Ç´„É¨„É≥„ÉÄ„Éº„ÅÆÂΩ¢Âºè„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏„Çí‰ΩúÊàê
    calendar_message, emoji = _create_calendar_message(current_month, current_year, selected_date)

    # „Ç´„É¨„É≥„ÉÄ„Éº„Çí„É°„ÉÉ„Çª„Éº„Ç∏„Å®„Åó„Å¶ÈÄÅ‰ø°
    message = await ctx.send(calendar_message)

    # Êúà„ÅÆÂ§âÊõ¥ÔºåÊó•‰ªò„Åë„ÅÆÂ§âÊõ¥Áî®„ÅÆ„É™„Ç¢„ÇØ„Ç∑„Éß„É≥„Çí‰ªò‰∏é
    await message.add_reaction("‚è™")
    await message.add_reaction("‚óÄ")
    await message.add_reaction("‚¨Ü")
    await message.add_reaction("‚¨áÔ∏è")
    await message.add_reaction("‚ñ∂")
    await message.add_reaction("‚è©")
    # ÊôÇÈñì„ÅÆÊåáÂÆö
    await message.add_reaction("üêî")
    await message.add_reaction("üåû")
    await message.add_reaction("üåô")

    # „É™„Ç¢„ÇØ„Ç∑„Éß„É≥„ÅÆÂæÖÊ©ü
    def check(reaction, user):
        return user == ctx.author and reaction.message.id == message.id

    try:
        while True:
            reaction, user = await bot.wait_for("reaction_add", timeout=120.0, check=check)
            last_date = calendar.monthrange(current_year, current_month)[1]

            # Êúà„ÅÆÂ§âÊõ¥„ÇíÂá¶ÁêÜ
            if str(reaction.emoji) == "‚è™":
                current_month -= 1
                if current_month == 0:
                    current_month = 12
                    current_year -= 1
            elif str(reaction.emoji) == "‚è©":
                current_month += 1
                if current_month == 13:
                    current_month = 1
                    current_year += 1
            # „Ç´„É¨„É≥„ÉÄ„Éº„ÅÆÊ®™ÁßªÂãï„ÇíÂá¶ÁêÜ
            elif str(reaction.emoji) == "‚¨ÜÔ∏è" and selected_date - 7 > 0:
                selected_date -= 7
            elif str(reaction.emoji) == "‚¨áÔ∏è" and selected_date + 7 < last_date + 1:
                selected_date += 7
            elif str(reaction.emoji) == "‚óÄ" and selected_date - 1 > 0:
                selected_date -= 1
            elif str(reaction.emoji) == "‚ñ∂" and selected_date + 1 < last_date + 1:
                selected_date += 1
            elif str(reaction.emoji) == "üêî":
                out = f"{current_year}-{current_month}-{selected_date} 08:00"
                await ctx.send(out)
                return out
            elif str(reaction.emoji) == "üåû":
                out = f"{current_year}-{current_month}-{selected_date} 13:00"
                await ctx.send(out)
                return out
            elif str(reaction.emoji) == "üåô":
                out = f"{current_year}-{current_month}-{selected_date} 18:00"
                await ctx.send(out)
                return out
            await reaction.message.remove_reaction(reaction, user)

            # „Ç´„É¨„É≥„ÉÄ„Éº„ÅÆÂÜÖÂÆπ„ÇíÊõ¥Êñ∞
            calendar_message, emoji = _create_calendar_message(
                current_month, current_year, selected_date
            )
            await message.edit(content=calendar_message)

    except asyncio.TimeoutError:
        await ctx.send("„Çø„Ç§„É†„Ç¢„Ç¶„Éà„Åó„Åæ„Åó„Åü")
        return


def _create_calendar_message(month, year, selected_date=0):
    cal = calendar.monthcalendar(year, month)
    header = f"```\n„Ç´„É¨„É≥„ÉÄ„Éº {year}Âπ¥ {month}Êúà\n"
    weekdays = [" Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]
    weekday_names = "  ".join([f"{weekday}" for weekday in weekdays])
    calendar_str = header + weekday_names + "\n"
    emoji = []
    for week in cal:
        week_str = ""
        for day in week:
            if day == 0:
                week_str += "     "
                emoji.append(None)
            else:
                if day == selected_date and month == month and year == year:
                    week_str += f" [{day:2d}]"
                else:
                    week_str += f"  {day:2d} "
                emoji.append(f"{year}-{month:02}-{day:02}")
        calendar_str += week_str + "\n"
    calendar_str += "```"
    return calendar_str, emoji


# Discord bot„ÅÆ„Éà„Éº„ÇØ„É≥„Çí‰Ωø„Å£„Å¶Ëµ∑Âãï
# bot.run(TOKEN)